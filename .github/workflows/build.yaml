#--------------------------------- deploy to docker hub
# name: flask-helloworld
# on:
#   push:
#     branches: [ master ]

# jobs:
#   docker:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
      
#       - name: Login Docker Hub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}
      
#       - name: Setup Docker Buildx
#         uses: docker/setup-buildx-action@v1
#         id: buildx

#       # - name: Cache Docker Image Layers
#       #   uses: actions/cache@v2
#       #   with:
#       #     path: /tmp/.buildx-cache
#       #     key: ${{ runner.os }}-buildx-${{ github.sha }}
#       #     restore-keys: ${{ runner.os }}-buildx-${{ github.sha }}

#       - name: Build and Push Docker Image
#         uses: docker/build-push-action@v2
#         id: docker_build
#         with:
#           context: ./
#           file: ./Dockerfile
#           builder : ${{ steps.buildx.outputs.name }} 
#           push: true
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/node-sample
#           # cache-from: type=local, src=/tmp/.buildx-cache
#           # cache-to: type=local, dest=/tmp/.buildx-cache

#       - name: verify
#         run: echo ${{ steps.docker_build.outputs.digest }}


#------------------------------------------- deploy to heroku
name: Build and Deploy to Heroku
on:
  push:
    branches : [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:    
      - name: Checkout 
        uses: actions/checkout@v2
      
      - name: Login to Heroku Container registry
        env: 
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        run: heroku container:login 




